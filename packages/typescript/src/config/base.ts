import type { Linter } from 'eslint'
import { SharedEditorConfig } from '@fellwork/eslint-shared'

export const typescriptBase: Linter.Config['rules'] = {
  '@typescript-eslint/await-thenable': 'off',
  '@typescript-eslint/consistent-type-exports': 'off',
  '@typescript-eslint/naming-convention': 'off',
  '@typescript-eslint/no-base-to-string': 'off',
  '@typescript-eslint/no-confusing-void-expression': 'off',
  '@typescript-eslint/no-floating-promises': 'off',
  '@typescript-eslint/no-meaningless-void-operator': 'off',
  '@typescript-eslint/no-misused-promises': 'off',
  '@typescript-eslint/prefer-regexp-exec': 'off',
  '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'off',
  '@typescript-eslint/no-unnecessary-condition': 'off',
  '@typescript-eslint/no-unnecessary-qualifier': 'off',
  '@typescript-eslint/no-unnecessary-type-arguments': 'off',
  '@typescript-eslint/no-unnecessary-type-assertion': 'off',
  '@typescript-eslint/no-unsafe-argument': 'off',
  '@typescript-eslint/no-unsafe-assignment': 'off',
  '@typescript-eslint/no-unsafe-call': 'off',
  '@typescript-eslint/no-unsafe-member-access': 'off',
  '@typescript-eslint/no-unsafe-return': 'off',
  '@typescript-eslint/non-nullable-type-assertion-style': 'off',
  '@typescript-eslint/prefer-includes': 'off',
  '@typescript-eslint/prefer-reduce-type-parameter': 'off',
  '@typescript-eslint/prefer-string-starts-ends-with': 'off',
  '@typescript-eslint/prefer-return-this-type': 'off',
  '@typescript-eslint/promise-function-async': 'off',
  '@typescript-eslint/require-array-sort-compare': 'off',
  '@typescript-eslint/restrict-plus-operands': 'off',
  '@typescript-eslint/switch-exhaustiveness-check': 'off',
  '@typescript-eslint/unbound-method': 'off',
  '@typescript-eslint/dot-notation': 'off',
  '@typescript-eslint/require-await': 'off',
  '@typescript-eslint/return-await': 'off',
  '@typescript-eslint/no-for-in-array': 'off',
  '@typescript-eslint/prefer-nullish-coalescing': 'off',
  '@typescript-eslint/prefer-readonly': 'off',
  '@typescript-eslint/prefer-readonly-parameter-types': 'off',
  '@typescript-eslint/no-implied-eval': 'off',
  '@typescript-eslint/restrict-template-expressions': 'off',
  '@typescript-eslint/strict-boolean-expressions': 'off',
  '@typescript-eslint/no-throw-literal': 'off',
  // Off
  'no-undef': 'off',
  '@typescript-eslint/ban-tslint-comment': 'off',
  '@typescript-eslint/no-extraneous-class': 'off',
  '@typescript-eslint/no-parameter-properties': 'off',
  '@typescript-eslint/typedef': 'off',
  '@typescript-eslint/no-type-alias': 'off',
  '@typescript-eslint/adjacent-overload-signatures': 'warn',
  // Warn or error
  'indent': 'off',
  '@typescript-eslint/indent': ['warn', SharedEditorConfig.indent_size, {
    SwitchCase: 1,
    VariableDeclarator: 1,
    outerIIFEBody: 1,
    MemberExpression: 1,
    FunctionDeclaration: { parameters: 1, body: 1 },
    FunctionExpression: { parameters: 1, body: 1 },
    CallExpression: { arguments: 1 },
    ArrayExpression: 1,
    ObjectExpression: 1,
    ImportDeclaration: 1,
    flatTernaryExpressions: false,
    ignoreComments: false,
    ignoredNodes: [
      'TemplateLiteral *',
      'JSXElement',
      'JSXElement > *',
      'JSXAttribute',
      'JSXIdentifier',
      'JSXNamespacedName',
      'JSXMemberExpression',
      'JSXSpreadAttribute',
      'JSXExpressionContainer',
      'JSXOpeningElement',
      'JSXClosingElement',
      'JSXFragment',
      'JSXOpeningFragment',
      'JSXClosingFragment',
      'JSXText',
      'JSXEmptyExpression',
      'JSXSpreadChild',
      'TSTypeParameterInstantiation',
    ],
    offsetTernaryExpressions: true,
  }],
  '@typescript-eslint/array-type': [
    'warn',
    {
      default: 'array-simple',
    },
  ],
  '@typescript-eslint/ban-ts-comment': [
    'warn',
    {
      'ts-expect-error': 'allow-with-description',
      'ts-ignore': 'allow-with-description',
      'ts-nocheck': 'allow-with-description',
      'ts-check': 'allow-with-description',
      'minimumDescriptionLength': 5,
    },
  ],
  '@typescript-eslint/consistent-type-assertions': [
    'warn',
    {
      assertionStyle: 'as',
      objectLiteralTypeAssertions: 'allow-as-parameter',
    },
  ],
  '@typescript-eslint/explicit-function-return-type': [
    'warn',
    {
      allowExpressions: true,
    },
  ],
  '@typescript-eslint/explicit-module-boundary-types': 'warn',
  '@typescript-eslint/member-delimiter-style': ['warn', { multiline: { delimiter: 'none' } }],
  '@typescript-eslint/member-ordering': 'warn',
  '@typescript-eslint/no-confusing-non-null-assertion': 'warn',
  '@typescript-eslint/no-empty-interface': [
    'warn',
    {
      allowSingleExtends: true,
    },
  ],
  '@typescript-eslint/no-explicit-any': 'warn',
  '@typescript-eslint/no-extra-non-null-assertion': 'warn',
  '@typescript-eslint/no-implicit-any-catch': 'warn',
  '@typescript-eslint/no-inferrable-types': 'warn',
  '@typescript-eslint/no-invalid-void-type': 'warn',
  '@typescript-eslint/no-non-null-assertion': 'warn',
  '@typescript-eslint/no-unnecessary-type-constraint': 'warn',
  '@typescript-eslint/prefer-as-const': 'warn',
  '@typescript-eslint/prefer-enum-initializers': 'warn',
  '@typescript-eslint/prefer-literal-enum-member': 'warn',
  '@typescript-eslint/prefer-ts-expect-error': 'warn',
  '@typescript-eslint/sort-type-union-intersection-members': 'warn',
  '@typescript-eslint/type-annotation-spacing': ['warn', {}],
  '@typescript-eslint/unified-signatures': 'warn',
  // Style
  'brace-style': 'off',
  '@typescript-eslint/brace-style': ['warn', 'stroustrup', { allowSingleLine: true }],
  'comma-dangle': 'off',
  '@typescript-eslint/comma-dangle': ['warn', 'always-multiline'],
  'comma-spacing': 'off',
  '@typescript-eslint/comma-spacing': ['warn', { before: false, after: true }],
  'default-param-last': 'off',
  '@typescript-eslint/default-param-last': 'warn',
  'func-call-spacing': 'off',
  '@typescript-eslint/func-call-spacing': 'warn',
  'keyword-spacing': 'off',
  '@typescript-eslint/keyword-spacing': ['warn', { before: true, after: true }],
  'lines-between-class-members': 'off',
  '@typescript-eslint/lines-between-class-members': ['warn', 'always', { exceptAfterSingleLine: true }],
  'no-array-constructor': 'off',
  '@typescript-eslint/no-array-constructor': 'warn',
  'no-empty-function': 'off',
  '@typescript-eslint/no-empty-function': 'warn',
  'no-extra-parens': 'off',
  '@typescript-eslint/no-extra-parens': ['warn', 'functions'],
  'no-extra-semi': 'off',
  '@typescript-eslint/semi': ['warn', 'never'],
  'no-loss-of-precision': 'off',
  '@typescript-eslint/no-loss-of-precision': 'warn',
  'no-magic-numbers': 'off',
  '@typescript-eslint/no-magic-numbers': [
    'warn',
    {
      ignoreEnums: true,
      ignore: [0, 1],
    },
  ],
  'no-shadow': 'off',
  '@typescript-eslint/no-shadow': 'warn',
  'no-unused-expressions': 'off',
  '@typescript-eslint/no-unused-expressions': 'warn',
  'no-unused-vars': 'off',
  '@typescript-eslint/no-unused-vars': [
    'warn',
    {
      argsIgnorePattern: '^_',
    },
  ],
  'no-useless-constructor': 'off',
  '@typescript-eslint/no-useless-constructor': 'warn',
  'object-curly-spacing': 'off',
  '@typescript-eslint/object-curly-spacing': ['warn', 'always'],
  'quotes': 'off',
  '@typescript-eslint/quotes': ['warn', 'single'],
  'semi': 'off',
  'space-before-blocks': 'off',
  '@typescript-eslint/space-before-blocks': ['error', 'always'],
  'space-before-function-paren': 'off',
  '@typescript-eslint/space-before-function-paren': [
    'warn',
    {
      named: 'never',
      anonymous: 'always',
      asyncArrow: 'always',
    },
  ],
  'space-infix-ops': 'off',
  '@typescript-eslint/space-infix-ops': 'warn',
  '@typescript-eslint/prefer-function-type': 'error',
  '@typescript-eslint/ban-types': [
    'error',
    {
      extendDefaults: true,
    },
  ],
  '@typescript-eslint/class-literal-property-style': 'error',
  '@typescript-eslint/consistent-indexed-object-style': ['error', 'record'],
  '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
  '@typescript-eslint/consistent-type-imports': [
    'error',
    {
      prefer: 'type-imports',
      disallowTypeAnnotations: false,
    },
  ],
  '@typescript-eslint/explicit-member-accessibility': [
    'error',
    {
      accessibility: 'explicit',
    },
  ],
  '@typescript-eslint/method-signature-style': 'error',
  '@typescript-eslint/no-dynamic-delete': 'error',
  '@typescript-eslint/no-misused-new': 'error',
  '@typescript-eslint/no-namespace': 'error',
  '@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
  '@typescript-eslint/no-require-imports': 'error',
  '@typescript-eslint/no-this-alias': 'error',
  '@typescript-eslint/no-var-requires': 'error',
  '@typescript-eslint/prefer-for-of': 'error',
  '@typescript-eslint/prefer-namespace-keyword': 'error',
  '@typescript-eslint/triple-slash-reference': [
    'error',
    {
      path: 'never',
      types: 'never',
      lib: 'never',
    },
  ],
  'init-declarations': 'off',
  '@typescript-eslint/init-declarations': 'error',
  'no-dupe-class-members': 'off',
  '@typescript-eslint/no-dupe-class-members': 'error',
  'no-duplicate-imports': 'off',
  '@typescript-eslint/no-duplicate-imports': 'error',
  'no-invalid-this': 'off',
  '@typescript-eslint/no-invalid-this': 'error',
  'no-loop-func': 'off',
  '@typescript-eslint/no-loop-func': 'error',
  'no-redeclare': 'off',
  '@typescript-eslint/no-redeclare': 'error',
  'no-use-before-define': 'off',
  '@typescript-eslint/no-use-before-define': ['error', { functions: false, classes: false, variables: true }],
}
